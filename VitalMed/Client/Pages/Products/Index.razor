@page "/products/"
@inject HttpClient _client
@inject IJSRuntime js
@inject HttpInterceptorService _interceptor
@implements IDisposable
@attribute [Authorize]
@inject NavigationManager _navManager

<h3 class="card-title">List of products</h3>

<a href="/products/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Add New Product
</a>
<br />
<br />

<link rel="stylesheet" type="text/css" href="/css/Product.css" />

@if (Products == null)
{
    <div class="alert alert-info">Loading Products...</div>
}
else
{
    <table class="table table-responsive" id="productsTable">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Category</th>
                <th>Image</th>
                <th>View Product</th>
                <th>Add to cart</th>
                <th>Edit Product</th>
                <th>Delete Product</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Products)
            {
                <tr>
                    <td>@product.ProductName</td>
                    <td>@product.ProductDesc</td>
                    <td>$@product.ProductPrice</td>
                    <td>@product.CId</td>
                    <td>
                        <!--image link is stored in product.ProductImage, which is a string variable-->
                        <img style="width:100px;height:100px" src="@product.ProductImage" />
                    </td>
                    <td>
                        <a href="products/view/@product.ID" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                    </td>
                    <td>
                        <button class="btn btn-warning" @onclick="@AddCartItem">
                            <span class="oi oi-cart"></span>
                            </button>
                    </td>
                    <td>
                        <a href="/products/edit/@product.ID" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(product.ID))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product> Products;
    private List<CartItem> CartItems;
    CartItem cartitem = new CartItem();

    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");
    }

    private async Task AddCartItem()
    {
        await _client.PostAsJsonAsync(Endpoints.CartItemsEndpoint, cartitem);
        _interceptor.MonitorEvent();
    }

    async Task Delete(int productID)
    {
        var product = Products.First(q => q.ID == productID);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {product.ID}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.ProductsEndpoint}/{productID}");
            await OnInitializedAsync();
        }
    }
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#productsTable");
    }
    public void Dispose()
    {
        js.InvokeVoidAsync("DataTablesDispose", "#productsTable");
        _interceptor.DisposeEvent();
    }


}